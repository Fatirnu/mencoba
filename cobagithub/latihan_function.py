# -*- coding: utf-8 -*-
"""latihan function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X9A9laY6NRSIfPmCZ345NKwrCwcqraWC

function untuk mencari mean, median, modus
"""

# n = [1,15,16,27,49,20,20,1,1,1,20,20]
n=[3,4,7,3,2,4,7,8]

def cari_mean(n):
  jumlah = sum(n)
  hitung= len(n)
  mean = round((jumlah/hitung),2)
  return mean

def cari_median(n):
  n.sort()
  panjang = len(n)
  tengah = panjang//2
  #jika ganjil
  if panjang % 2 == 1:
    return n[tengah]
  else:
    return (n[tengah - 1] + n[tengah]) / 2

def cari_modus(n):
  count = {}
  for nilai in n:
    if nilai in count:
      count[nilai] += 1
    else:
      count[nilai] = 1
  modus = n[0]
  for nilai in count.keys():
    jumlah = count[nilai]

    if jumlah > count[modus]:
      modus = nilai

  return modus



cari_mean(n)
# cari_median(n)
# cari_modus(n)

"""quartil"""

import math
def quartile_one(x):
    x.sort()
    k = 0
    if (len(x)%2) == 0:
        k = (math.floor((len(x) + 1)*0.25))
        return ((x[k - 1]) + (x[k]))/2
    else:
        k = (math.floor((len(x) + 1)*0.25))
        return x[k - 1]
def quartile_three(x):
    x.sort()
    k = 0
    if (len(x)%2) == 0:
        k = (math.floor(len(x)*0.75))
        return (((x[k - 1]) + (x[k]))/2)
    else:
        k = (math.floor(len(x)*0.75))
        return x[k - 1]
x = [150, 167, 175, 157, 165, 153, 177, 160]
print(quartile_one(x))
print(quartile_three(x))